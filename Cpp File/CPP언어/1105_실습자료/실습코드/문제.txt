▶  다음 클래스를 구현하시오.

덧셈,뺄셈, 곱셈, 나눗셈 연산을 수행할 수 있는 클래스를 구현하시오. : 클래스명 : Cal 
  
[ 조 건 ]
1.  맴버 변수는 아래와 같이 구성한다.
    3개의 맴버 변수 
    연산을 수행할 2개의 변수,  결과값을 저장하는 변수 


2. class 가 기본적으로 가져할 할 구성을 만족시켜야 함 
   단 main문 시나리오에 맞추어서 아래 내용들을 구성할 것
-	생성자 & 소멸자 ( 생성자 다중 정의)				
-	Get/Set Method(Property)						
-	그 외 기능 Method ( 각각의 연산에 대한 Method, 연산 결과를 출력해 주는 Method ) 
-	적절한 부분에 const 키워드 사용 	     
-	적절한 부분에 에러 처리 기능(예 : 0으로 나눌 수 없다.)  
	
3. main문 시나리오.
1)	A라는 객체를 생성시킨다.(default 생성자 호출) 
	단) 모든 변수를 0으로 초기화 한다.

2)	B라는 객체를 생성시킨다.(인자를 2개 가지는 생성자를 호출)
	단) 피연산자를 초기화하고,  결과값은 0으로 초기화 한다.

3)	A라는 객체를 가지고 덧셈/뺄셈/곱셈 연산을 수행한다.
	단) A 객체는 값을 가지고 있지 않기 때문에 SetMethod를 통해서 2개의 피연산자 값을 set 한다.
                이 후 해당 Method를 호출한다. ( ex) void Add( ); void Sub();  void Mul(); 
                해당 Method는 아래와 같은 시나리오로 구성된다.
                void Add()
                {
                   // 해당 연산을 수행하여 결과값을 결과값을 저장하는 변수에 저장
                   // 연산의 결과를 출력하는 함수 호출 : 호출 결과 예( X + O = X )
                }
                

4)	B라는 객체를 가지고 나눗셈 연산을 수행한다.
	단) 0으로 나누게 될 경우 연산을 수행하지 않고,  0으로 나눌 수 없는 에러 메시지를 출력해야 한다.
                그 외 기능은 3)번의 예와 동일하다. 
===============================================================

구현이 완료되면, C언어에서 작성했던 계산기 프로그램을 CPP 형태로 재 작성한다.
구현되어야 할 클래스 
1) 기본 Data 클래스 : Cal ==> 위에서 작성한 클래스를 기반으로 필요한 맴버함수를 추가한다.

2) 구현 클래스 : CalManager  ==> 1101에 작성했던 Telphonebook 클래스의 역할 

3) 프로그램 흐름 구현 : App 클래스 
   메뉴 1. 문제 생성(10개의 문제를 렌덤하게 생성)
   메뉴 2. 문제 풀이(10개의 문제가 출제되고 해당 문제를 풀게 된다.)
   메뉴 3. 결과 보기(문제의 결과가 출력된다.)
   메뉴 4. 프로그램 종료

*) 가능하다면 Container 클래스를(데이터 저장 클래스) 사용하여 CalManager 클래스의 
   기능을 분리한다.















