/**************************************************************************

  [ 포인터 배열 정리 ]

**************************************************************************/

/*

  1) 선언에 따른 의미 ---------------------------------------------------------

  1. int *board;
     - board는 정수형 포인터이다.

     - 해당 변수로 접근할 수 있는 값은 크게 3가지 임
	   board,   &board,  *board


  2. int **ptr;
     - ptr은 정수형 포인터의 포인터이다.
	 
	 - 해당 변수로 접근할 수 있는 값은 크게 4가지 임
       ptr, &ptr, *ptr, **ptr


  3. int *risk[10];
     - risk는 정수형 포인터들이 10개 모인 배열이다.
	   
	 - risk : 주소값 리턴 risk[0] : 주소값 리턴  ,  *risk[0] : 값 리턴


  4. int (*wisks)[10];
     - wisks는 10개의 정수들로 된 배열을 가리키는 하나의 포인터이다.

     - wisks : 주소값 리턴,  *wisks : 주소값 리턴,  **wisks : 값 리턴 


  5. int *oof[3][4];


  6. int (*uuf)[3][4]
     - uuf는 3행 4열의 정수형 배열을 가리키는 포인터이다.




  2) 연산자에 따른 우선순위 규칙 ----------------------------------------

  1. 명칭에 가까운 수식어일수록 우선순위가 높다.

  2. []와 ()가 *보다 우선순위가 높다.

  3. 식의 그룹화 괄호는 우선순위가 가장 높다.

    
  ex1) char *fump();
       - 규칙 2에 의하여 char * (fump()); 와 같음
	     즉, fump함수는 char*를 리턴하는 함수임 

  ex2) char (*frump)();
       - frump는 char형을 되돌리는 함수에의한 포인터이다.

  ex3) char (*flump())[3];
       - flump는 3개의 요소로된 char형 배열에 의한 포인터를 리턴하는 함수임 

  ex4) char *flimp[3](); 또는 char (*flimp[3])();
       - flimp는 char형을 되돌리는 함수에 의한 포인터들 3개로 된 배열이다.

*/


